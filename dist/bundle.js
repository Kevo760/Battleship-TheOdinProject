(()=>{"use strict";var __webpack_modules__={426:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    font-family: \'Ubuntu\', sans-serif;\\r\\n    background-color: aliceblue;\\r\\n}\\r\\n\\r\\n* {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.content {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n    margin: 10rem auto;\\r\\n    gap: 4rem;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.board-ui {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    border: 1px black solid;\\r\\n    height: 21rem;\\r\\n    width: 21rem;\\r\\n    box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\\r\\n    \\r\\n}\\r\\n\\r\\n.opponent-tile, .player-tile {\\r\\n    flex: 1 0 10%;\\r\\n    width: 100%;\\r\\n    border: 1px black solid;\\r\\n}\\r\\n\\r\\n.opponent-tile {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.has-ship {\\r\\n  background-color: rgb(59, 59, 59);\\r\\n}\\r\\n\\r\\n.hit {\\r\\n    background-color: orangered;\\r\\n}\\r\\n\\r\\n.miss {\\r\\n    background-color: dodgerblue;\\r\\n}\\r\\n\\r\\n\\r\\n.winner-block button {\\r\\n    padding: 1rem 3rem 1rem 3rem;\\r\\n    font-family: inherit;\\r\\n    font-size: 1.5rem;\\r\\n    font-weight: bold;\\r\\n\\r\\n}\\r\\n\\r\\n/* =========================== STARTGAME UI =========================== */\\r\\n\\r\\n.start-modal {\\r\\n  width: 35rem;\\r\\n  height: 39rem;\\r\\n  margin: 8rem auto;\\r\\n  padding: 1rem;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  background-color: rgba(59, 59, 59, .3);\\r\\n  border-radius: .5rem;\\r\\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\\r\\n}\\r\\n\\r\\n.controls {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  gap: 1rem;\\r\\n}\\r\\n\\r\\n.tile {\\r\\n  flex: 1 0 10%;\\r\\n  width: 100%;\\r\\n  border: 1px black solid;\\r\\n  cursor: pointer;\\r\\n  background-color: aliceblue;\\r\\n}\\r\\n\\r\\n.place-ship {\\r\\n  background-color: rgb(59, 59, 59);\\r\\n}\\r\\n\\r\\n.boxes {\\r\\n  height: 70%;\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  padding: 1rem;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.controls {\\r\\n  height: 30%;\\r\\n  text-align: center;\\r\\n  padding: 1rem;\\r\\n}\\r\\n\\r\\n.hover {\\r\\n  background-color: rgb(59, 59, 59);\\r\\n}\\r\\n\\r\\n.start-game {\\r\\n  margin-top: 1rem;\\r\\n  padding: 1rem 2rem;\\r\\n  font-size: 1.5rem;\\r\\n  font-family: inherit;\\r\\n  border-radius: .5rem;\\r\\n  background-color: aliceblue;\\r\\n}\\r\\n\\r\\n.start-game:hover:enabled {\\r\\n  background-color: rgba(59, 59, 59, 2);\\r\\n  color: aliceblue;\\r\\n}\\r\\n\\r\\n.start-game:active:enabled {\\r\\n  background-color: aliceblue;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/* =========================== STARTGAME UI =========================== */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/* =========================== TOGGLE =========================== */\\r\\n* {\\r\\n    user-select: none;\\r\\n    -webkit-tap-highlight-color: transparent;\\r\\n  }\\r\\n  \\r\\n*:focus {\\r\\n    outline: none;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.knobs,\\r\\n.layer {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  position: relative;\\r\\n  width: 74px;\\r\\n  height: 36px;\\r\\n  overflow: hidden;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n\\r\\n.button.b2 {\\r\\n  border-radius: 2px;\\r\\n\\r\\n}\\r\\n\\r\\n.checkbox {\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  opacity: 0;\\r\\n  cursor: pointer;\\r\\n  z-index: 3;\\r\\n}\\r\\n\\r\\n.knobs {\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.layer {\\r\\n  width: 100%;\\r\\n  background-color: #ebf7fc;\\r\\n  transition: 0.3s ease all;\\r\\n  z-index: 1;\\r\\n  border-radius: .2rem;\\r\\n}\\r\\n\\r\\n/* Button 16 */\\r\\n#button-16 .knobs:before {\\r\\n  content: \\"V\\";\\r\\n  position: absolute;\\r\\n  top: 4px;\\r\\n  left: 4px;\\r\\n  width: 20px;\\r\\n  height: 10px;\\r\\n  color: #fff;\\r\\n  font-size: 10px;\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n  line-height: 1;\\r\\n  padding: 9px 4px;\\r\\n  background-color: rgb(59, 59, 59);\\r\\n  border-radius: 2px;\\r\\n  transition: 0.3s ease all, left 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15);\\r\\n\\r\\n}\\r\\n\\r\\n#button-16 .checkbox:active + .knobs:before {\\r\\n  width: 46px;\\r\\n}\\r\\n\\r\\n#button-16 .checkbox:checked:active + .knobs:before {\\r\\n  margin-left: -26px;\\r\\n}\\r\\n\\r\\n#button-16 .checkbox:checked + .knobs:before {\\r\\n  content: \\"H\\";\\r\\n  left: 42px;\\r\\n  background-color: rgb(59, 59, 59);\\r\\n}\\r\\n\\r\\n#button-16 .checkbox:checked ~ .layer {\\r\\n  background-color: white;\\r\\n  border-radius: .2rem;\\r\\n}\\r\\n\\r\\n\\r\\n/* =========================== TOGGLE =========================== */", ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://battleship-theodinproject/./src/style.css?./node_modules/css-loader/dist/cjs.js')},645:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += "}";\n      }\n\n      if (item[2]) {\n        content += "}";\n      }\n\n      if (item[4]) {\n        content += "}";\n      }\n\n      return content;\n    }).join("");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/css-loader/dist/runtime/api.js?')},81:module=>{eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/css-loader/dist/runtime/noSourceMaps.js?")},379:module=>{eval('\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?')},569:module=>{eval('\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/style-loader/dist/runtime/insertBySelector.js?')},216:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/style-loader/dist/runtime/insertStyleElement.js?')},565:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?')},795:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n\n  var needLayer = typeof obj.layer !== "undefined";\n\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += "}";\n  }\n\n  if (obj.media) {\n    css += "}";\n  }\n\n  if (obj.supports) {\n    css += "}";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/style-loader/dist/runtime/styleDomAPI.js?')},589:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://battleship-theodinproject/./node_modules/style-loader/dist/runtime/styleTagTransform.js?")},522:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n;// CONCATENATED MODULE: ./src/functions/gameboardFactory.js\n\r\nclass Gameboard {\r\n\r\n    constructor() {\r\n        this.board;\r\n        this.missedShots = [];\r\n        this.shotsMade = [];\r\n        this.createBoard();\r\n    }\r\n\r\n    // Creates the 10x10 board with value of 0\r\n    createBoard() {\r\n        return this.board = ([...Array(10)].map( () => Array(10).fill(0)))\r\n    }\r\n\r\n\r\n    placeShip(ship, row, column, verticle) {\r\n        if(!this.possiblePlacement(ship, row, column, verticle)) return false;\r\n\r\n        // If verticle is true place ship on designated area based on ship length\r\n        if(verticle) {\r\n            for(let i = 0; i < ship.length; i++) {\r\n                this.board[row + i][column] = ship;\r\n            }\r\n        // If verticle is false place ship on designated area based on ship length\r\n        } else if(!verticle) {\r\n            for(let i = 0; i < ship.length; i++) {\r\n                this.board[row][column + i] = ship;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n\r\n    possiblePlacement(ship, row, column, verticle) {\r\n\r\n\r\n        // check verticle placement is true\r\n         if(verticle) {\r\n            for(let i = 0; i < ship.length; i++) {\r\n                // while row placement is taken or invalid return false\r\n              try {\r\n                while(this.board[row + i][column] !== 0) {\r\n                    return false\r\n                }\r\n              } catch(err) {\r\n                return false\r\n              }\r\n      \r\n            }\r\n            return true\r\n        // If verticle is false \r\n        } else if(!verticle) {\r\n            for(let i = 0; i < ship.length; i++) {\r\n                // while column placement is taken or invalid return false\r\n                try {\r\n                    while(this.board[row][column + i] !== 0) {\r\n                        return false\r\n                    }\r\n                  } catch(err) {\r\n                    return false\r\n                  }\r\n            }\r\n            return true\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    receiveAttack(row, column) {\r\n        // Creates a position array with row and column\r\n        const position = [row, column];\r\n        \r\n        // If positionShot is false return true\r\n        if(this.alreadyShot(position) === false) {\r\n\r\n        // If board selection does not equal 0, pass hitShip and isSunk function on ship and push position on shotsMade\r\n        if(this.board[row][column] !== 0) {\r\n                this.board[row][column].hitShip(position);\r\n                this.board[row][column].isSunk();\r\n                this.shotsMade.push(position);\r\n            // Else push position array into missedShot and shotsMade array\r\n            } else {\r\n                this.missedShots.push(position);\r\n                this.shotsMade.push(position);\r\n            }\r\n\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    alreadyShot(position) {\r\n        const myArray = this.shotsMade;\r\n        // true or false staments that finds if the position matches the shots made array\r\n        return myArray.some(arrays => position.every((e, location) => e === arrays[location]))\r\n    }\r\n\r\n    missedShot(position) {\r\n        const myArray = this.missedShots;\r\n        // true or false staments that finds if the position matches the shots made array\r\n        return myArray.some(arrays => position.every((e, location) => e === arrays[location]))\r\n    }\r\n\r\n\r\n    checkAllShipsSunk() {\r\n        // pushes true or false on ships\r\n        const carrier = this.isBoatSunk('carrier');\r\n        const battleship = this.isBoatSunk('battleship');\r\n        const cruiser = this.isBoatSunk('cruiser');\r\n        const submarine = this.isBoatSunk('submarine');\r\n        const destroyer = this.isBoatSunk('destroyer');\r\n        \r\n        // If all ships return sunk then return this function as true\r\n        if(carrier && battleship && cruiser && submarine && destroyer === true) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    isBoatSunk(shipName) {\r\n        // convert board to a variable\r\n        const array = this.board;\r\n\r\n        for(let i = 0; i < array.length; i++) {\r\n            // pass through array and find object the equals to ships name\r\n            const boat = array[i].find(obj => obj.name === shipName);\r\n            //If boat is not undefined grab it\r\n                if(boat !== undefined) {\r\n                    // If boat object is sunk is true return true else return false\r\n                    if(boat.sunk === true) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        resetBoard() {\r\n            this.board;\r\n            this.missedShots = [];\r\n            this.shotsMade = [];\r\n            return this.board = ([...Array(10)].map( () => Array(10).fill(0)))\r\n        }\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/functions/shipFactory.js\nclass Ship {\r\n    constructor(name, length) {\r\n        this.name = name;\r\n        this.length = length;\r\n        this.sunk = false;\r\n        this.damage = {\r\n            hit: 0,\r\n            position: [],\r\n        }\r\n    }\r\n    // When call add damage to ship and mark position hit\r\n    hitShip(area) {\r\n        this.damage.hit++,\r\n        this.damage.position.push(area)\r\n    }\r\n    // When called isSunk becomes true\r\n    isSunk() {\r\n        if(this.length == this.damage.hit) {\r\n            this.sunk = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/functions/player.js\n\r\n\r\n\r\nclass Player {\r\n\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    \r\n    // Access gameboard recieveAttack function\r\n    attack(board, row, column) {\r\n        return board.receiveAttack(row, column);\r\n    }\r\n\r\n    // Access gameboard recieveAttack function and randomly attacks a position until true\r\n    randomAttack(board) {\r\n        while(true) {\r\n            const row = this.generateRandomNumber(10);\r\n            const column = this.generateRandomNumber(10);\r\n\r\n            const attack = board.receiveAttack(row, column);\r\n            // when attack is true return the position\r\n            if(attack === true) {\r\n                const position = [row, column]\r\n                return position\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    // Creates the battleship and places them randomly\r\n    placeShipsRandomly(board) {\r\n        const carrier = new Ship('carrier', 5);\r\n        const battleship = new Ship('battleship', 4);\r\n        const cruiser = new Ship('cruiser', 3);\r\n        const submarine  = new Ship('submarine', 3);\r\n        const destroyer = new Ship('destroyer', 2);\r\n\r\n        this.randomShipPlacer(board, carrier);\r\n        this.randomShipPlacer(board, battleship);\r\n        this.randomShipPlacer(board, cruiser);\r\n        this.randomShipPlacer(board, submarine);\r\n        this.randomShipPlacer(board, destroyer);\r\n    }\r\n\r\n    // Generates a random number based on the number inputted \r\n    generateRandomNumber(number) {\r\n        return Math.floor(Math.random() * number)\r\n    }\r\n\r\n    // Genrates a true or false for verticle direction\r\n    generateRandomDirection() {\r\n        const number = this.generateRandomNumber(2);\r\n\r\n        if(number === 0) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    // Places ship in a random row, column, and direction and only breaks when its placement is true\r\n    randomShipPlacer(board, ship) {\r\n        while(true) {\r\n            const row = this.generateRandomNumber(10);\r\n            const column = this.generateRandomNumber(10);\r\n            const verticle = this.generateRandomDirection();\r\n\r\n            const random = board.placeShip(ship, row, column, verticle);\r\n            if(random === true) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/UI/headerUI.js\nfunction createHeaderUI(name) {\r\n    const header = document.createElement('header');\r\n    header.style.backgroundColor = 'rgb(59, 59, 59)';\r\n    header.style.color = 'white';\r\n    header.style.position = 'fixed';\r\n    header.style.width = '100%';\r\n    header.style.height = '4rem';\r\n    header.style.left = '0';\r\n    header.style.top = '0';\r\n    header.style.display = 'flex';\r\n    header.style.justifyContent = 'center';\r\n    header.style.alignItems = 'center';\r\n    header.style.boxShadow = 'rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px';\r\n    header.style.padding = '1rem '\r\n\r\n\r\n    const h1 = document.createElement('h1');\r\n    h1.classList.add('header-title');\r\n    h1.innerText = name;\r\n\r\n    header.append(h1);\r\n \r\n\r\n    return document.body.append(header);\r\n};\r\n\r\n\r\n\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/style.css\nvar style = __webpack_require__(426);\n;// CONCATENATED MODULE: ./src/style.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, \"head\");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(style/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const src_style = (style/* default */.Z && style/* default.locals */.Z.locals ? style/* default.locals */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/UI/toggle.js\nfunction toggle() {\r\n    const btn = document.createElement('div');\r\n    btn.classList.add('button');\r\n    btn.id = 'button-16';\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = 'checkbox';\r\n    checkbox.classList.add('checkbox');\r\n\r\n    const knobs = document.createElement('div');\r\n    knobs.classList.add('knobs');\r\n\r\n    const layer = document.createElement('div');\r\n    layer.classList.add('layer');\r\n\r\n    btn.append(checkbox);\r\n    btn.append(knobs);\r\n    btn.append(layer);\r\n    \r\n    return btn;\r\n};\r\n\r\n\n;// CONCATENATED MODULE: ./src/UI/placeShipUI.js\n\r\n\r\n\r\n\r\nconst createTileDiv = (row, column) => {\r\n    const tile = document.createElement('div');\r\n    tile.dataset.row = row;\r\n    tile.dataset.column = column;\r\n    tile.classList.add('tile');\r\n\r\n    return tile;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst gameBoardUI = (game) => {\r\n    const tiles = game.board;\r\n\r\n    const boardUI = document.createElement('div');\r\n    boardUI.classList.add('board-ui');\r\n\r\n    for(let i = 0; i < tiles.length; i++) {\r\n        for(let j = 0; j < tiles.length; j++) {\r\n                boardUI.append(createTileDiv(i, j))\r\n\r\n        }\r\n    }\r\n\r\n    return boardUI;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst placeShipUI = (game) => {\r\n\r\n\r\n    const modal = document.createElement('div');\r\n    modal.classList.add('start-modal');\r\n\r\n    const controls = document.createElement('div');\r\n    controls.classList.add('controls');\r\n    \r\n\r\n    const h1 = document.createElement('h1');\r\n    h1.innerText = `It's time to battle!`\r\n\r\n    const p = document.createElement('p');\r\n    p.innerText = 'Place your five battleships';\r\n\r\n    const block = document.createElement('div');\r\n    block.classList.add('start-block');\r\n    block.append(gameBoardUI(game));\r\n\r\n    const startBtn = document.createElement('button');\r\n    startBtn.classList.add('start-game');\r\n    startBtn.innerText = 'Begin Game!';\r\n    startBtn.disabled = true;\r\n\r\n\r\n\r\n    controls.append(h1);\r\n    controls.append(p);\r\n    controls.append(toggle());\r\n\r\n\r\n    modal.append(controls);\r\n    modal.append(block);\r\n    modal.append(startBtn);\r\n    \r\n\r\n    return document.body.append(modal);\r\n};\r\n\r\nconst removePlaceShipUI = () => {\r\n    const modal = document.querySelector('.start-modal');\r\n\r\n    return modal.remove();\r\n};\r\n\r\nconst enableStartBtn = () => {\r\n    const startBtn = document.querySelector('.start-game');\r\n    startBtn.disabled = false;\r\n};\r\n\r\nconst disableStartBtn = () => {\r\n    const startBtn = document.querySelector('.start-game');\r\n    startBtn.disabled = true;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/game/placeShipFunctions.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst tileSelector = (row, column) => {\r\n    return document.querySelector(`[data-row=\"${row}\"][data-column=\"${column}\"],player-tile`)\r\n};\r\n\r\nconst clickIt = (mainBoard, mainShips, controls, event) => {\r\n    let click = controls.getClick();\r\n    let isVerticle = controls.getIsVerticle();\r\n\r\n    //if Click is 5 do nothing\r\n    if(click === 5) {\r\n        return\r\n    };\r\n\r\n    // converts row and column string to numbers\r\n    let row = parseInt(event.target.dataset.row);\r\n    let column = parseInt(event.target.dataset.column);\r\n    // if placeship is true pass the functions below\r\n    if(mainBoard.placeShip(mainShips[click], row, column, isVerticle) === true) {\r\n        // if verticle add has-ship class on tiles vertically\r\n        if(isVerticle) {\r\n            for(let i = 0; i < mainShips[click].length; i++) {\r\n                tileSelector(row + i, column)\r\n                .classList.add('place-ship');\r\n                const removeListener = tileSelector(row + i, column);\r\n                removeListener.removeEventListener('click', clickIt);\r\n            };\r\n        // else if its false add has-ship class on tiles horizontally\r\n        } else {\r\n            for(let i = 0; i < mainShips[click].length; i++) {\r\n                tileSelector(row, column + i)\r\n                .classList.add('place-ship');\r\n        };\r\n    };\r\n    // if place ship is true add to click\r\n    controls.addClick();\r\n    };\r\n\r\n};\r\n\r\n\r\nconst mouseOver = (mainShips, controls, event) => {\r\n    let click = controls.getClick();\r\n    let isVerticle = controls.getIsVerticle();\r\n    // if click is less than 5 add hover class\r\n    if(click < 5 && isVerticle) {\r\n     for(let i = 0; i < mainShips[click].length; i++) {\r\n       let row = parseInt(event.target.dataset.row) + i;\r\n       // prevents adding the hover class on rows over 9\r\n       if(row < 10) {\r\n        tileSelector(row, event.target.dataset.column)\r\n        .classList.add('hover');\r\n       }\r\n     }\r\n    } else if (click < 5 && !isVerticle) {\r\n        for(let i = 0; i < mainShips[click].length; i++) {\r\n            let column = parseInt(event.target.dataset.column) + i;\r\n            // prevents adding the hover class on columns over 9\r\n            if(column < 10) {\r\n                tileSelector(event.target.dataset.row, column)\r\n                .classList.add('hover');\r\n            } \r\n        }\r\n    } else {\r\n        // if click is 5 or greater enable the start button\r\n        enableStartBtn();\r\n    }\r\n};\r\n\r\nconst mouseLeave = (mainShips, controls, event) => {\r\n    let click = controls.getClick();\r\n    let isVerticle = controls.getIsVerticle();\r\n    //If click is less than 5 remove hover class\r\n    if(click < 5 && isVerticle) {\r\n        for(let i = 0; i < mainShips[click].length; i++) {\r\n            let row = parseInt(event.target.dataset.row) + i;\r\n            // prevents removing the hover class on rows over 9\r\n            if(row < 10) {\r\n             tileSelector(row, event.target.dataset.column)\r\n             .classList.remove('hover');\r\n            }\r\n        }\r\n       } else if (click < 5 && !isVerticle) {\r\n        for(let i = 0; i < mainShips[click].length; i++) {\r\n            let column = parseInt(event.target.dataset.column) + i;\r\n            // prevents removing the hover class on columns over 9\r\n            if(column < 10) {\r\n                tileSelector(event.target.dataset.row, column)\r\n                .classList.remove('hover');\r\n            }\r\n        }\r\n    } else {\r\n        return \r\n    }\r\n};\r\n\r\nconst checkBox = (controls, event) => {\r\n    // if e target is check verticle is false, is it is not checked verticle is true\r\n    if(event.target.checked) {\r\n        controls.changeToHorizontal();\r\n    } else {\r\n        controls.changeToVerticle();\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst verticleTogglerHandler = (controls) => {\r\n    // Handles the checkbox\r\n    const checkbox = document.querySelector(\"input[type=checkbox]\");\r\n    checkbox.addEventListener('change', function(event) {\r\n        checkBox(controls, event);\r\n    });\r\n};\r\n\r\nconst mouseClickHandler = (mainBoard, mainShips, controls) => {\r\n    const startTiles = document.querySelectorAll('.tile');\r\n    startTiles.forEach(tile => {\r\n        tile.addEventListener('click', function(event) {\r\n            clickIt(mainBoard, mainShips, controls, event);\r\n        });\r\n    });\r\n};\r\n\r\nconst mouseOverHandler = (mainShips, controls) => {\r\n    const startTiles = document.querySelectorAll('.tile');\r\n    startTiles.forEach(tile => {\r\n        tile.addEventListener('mouseover', function(event){\r\n            mouseOver(mainShips, controls, event);\r\n        });\r\n    });\r\n};\r\n\r\nconst mouseLeaveHandler = (mainShips, controls) => {\r\n    const startTiles = document.querySelectorAll('.tile');\r\n    startTiles.forEach(tile => {\r\n        tile.addEventListener('mouseleave', function(event) {\r\n            mouseLeave(mainShips, controls, event);\r\n        });\r\n    });\r\n};\r\n\r\n\r\n\r\nconst placeShipsPage = (opponent, mainBoard, mainShips, controls) => {\r\n    placeShipUI(opponent);\r\n    verticleTogglerHandler(controls);\r\n    mouseClickHandler(mainBoard, mainShips, controls);\r\n    mouseOverHandler(mainShips, controls);\r\n    mouseLeaveHandler(mainShips, controls);\r\n};\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/game/game.js\n\r\n\r\nconst createAllShips = () => {\r\n    const allShips = [];\r\n\r\n    const carrier = new Ship('carrier', 5);\r\n    const battleship = new Ship('battleship', 4);\r\n    const cruiser = new Ship('cruiser', 3);\r\n    const submarine  = new Ship('submarine', 3);\r\n    const destroyer = new Ship('destroyer', 2);\r\n\r\n    allShips.push(carrier);\r\n    allShips.push(battleship);\r\n    allShips.push(cruiser);\r\n    allShips.push(submarine);\r\n    allShips.push(destroyer);\r\n\r\n    return allShips\r\n};\r\n\r\n\r\nclass Controller {\r\n    constructor() {\r\n        this.click = 0,\r\n        this.isVerticle = true\r\n    }\r\n\r\n    getClick() {\r\n        return this.click;\r\n    }\r\n\r\n    getIsVerticle() {\r\n        return this.isVerticle;\r\n    }\r\n\r\n    addClick() {\r\n        return this.click++\r\n    }\r\n\r\n    changeToVerticle() {\r\n        return this.isVerticle = true;\r\n    }\r\n\r\n    changeToHorizontal() {\r\n        return this.isVerticle = false;\r\n    }\r\n\r\n    resetValues() {\r\n        this.click = 0;\r\n        this.isVerticle = true;\r\n    }\r\n};\r\n\r\n\n;// CONCATENATED MODULE: ./src/UI/WinnerUI.js\nconst winnerUI = (winnerName) => {\r\n    const modal = document.createElement('div');\r\n    modal.classList.add('winner-modal');\r\n    modal.style.position = \"fixed\";\r\n    modal.style.width = \"100%\";\r\n    modal.style.height = \"100%\";\r\n    modal.style.left = \"0\";\r\n    modal.style.top = \"0\";\r\n    modal.style.overflow = \"auto\";\r\n    modal.style.backgroundColor = \"rgba(0, 0, 0, .9)\";\r\n    modal.style.marginTop = \"4rem\";\r\n\r\n\r\n    const h1 = document.createElement('h1');\r\n    h1.innerText = `Victory to ${winnerName}!`;\r\n    h1.style.backgroundColor = \"black\";\r\n    h1.style.color = \"aliceblue\";\r\n    h1.style.padding = \"2rem\";\r\n    h1.style.borderRadius = \".5rem\";\r\n\r\n    const btn = document.createElement('button');\r\n    btn.classList.add('play-again');\r\n    btn.innerText = 'Play Again!';\r\n    btn.style.padding = \"1rem 3rem 1rem 3rem\";\r\n    btn.style.fontFamily = \"inherit\";\r\n    btn.style.fontSize = \"1.5rem\";\r\n    btn.style.fontWeight = \"bold\";\r\n\r\n    const block = document.createElement('div');\r\n    block.classList.add('winner-block');\r\n    block.classList.add('winner-modal');\r\n    block.style.backgroundColor = 'aliceblue';\r\n    block.style.width = '30rem';\r\n    block.style.height = '20rem';\r\n    block.style.borderRadius = '.5rem';\r\n    block.style.margin = '5rem auto';\r\n    block.style.padding = '1rem';\r\n    block.style.display = 'flex';\r\n    block.style.flexDirection = 'column';\r\n    block.style.justifyContent = 'center';\r\n    block.style.alignItems = 'center';\r\n    block.style.gap = '5rem';\r\n\r\n    block.append(h1);\r\n    block.append(btn);\r\n\r\n    modal.append(block);\r\n   \r\n\r\n\r\n    return document.body.append(modal);\r\n}\r\n\r\nconst removeWinnerUI = () =>{\r\n    const modal = document.querySelector('.winner-modal');\r\n\r\n    return modal.remove()\r\n};\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/UI/contentUI.js\nfunction contentUI() {\r\n    const content = document.createElement('div');\r\n    content.classList.add('content');\r\n\r\n\r\n    return document.body.append(content);\r\n};\r\n\r\nconst removeContentUI = () => {\r\n    const content = document.querySelector('.content');\r\n\r\n    return content.remove();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/game/playAgain.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst playAgainBtn = (mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls) => {\r\n    mainBoard.resetBoard();\r\n    opponentBoard.resetBoard();\r\n    mainShips = createAllShips();\r\n    controls.resetValues();\r\n    removeWinnerUI();\r\n    placeShipsPage(opponentBoard, mainBoard, mainShips, controls);\r\n    startGame(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls);\r\n};\r\n\r\nconst playAgain = (mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls) => {\r\n    const btn = document.querySelector('.play-again');\r\n    btn.addEventListener('click', function() {\r\n        playAgainBtn(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls);\r\n    })\r\n    };\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/game/gameTurn.js\n\r\n\r\n\r\n\r\nconst gameTurnHandler = (mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls, event) => {\r\n    // passes e target to current tile\r\n   const currentTile = event.target;\r\n   // passes current tile dataset onto column and row\r\n   const column = currentTile.dataset.column;\r\n   const row = currentTile.dataset.row;\r\n\r\n  \r\n    // Main player attacks\r\n        // Pass recieveAttack function on selected row and column\r\n        mainPlayer.attack(opponentBoard, row, column);\r\n       // opponentGame.receiveAttack(row, column);\r\n        // Convert row and column into a variable array\r\n        const position = [row, column];\r\n        //if missed shot is true\r\n        if(opponentBoard.missedShot(position)) {\r\n            currentTile.classList.add('miss');\r\n        } else {\r\n            currentTile.classList.add('hit');\r\n        };\r\n   \r\n    // Computer attacks after player selects\r\n        \r\n        // random attack array value pass on position2\r\n        const position2 = opponent.randomAttack(mainBoard);\r\n        // converst random attack array into row and column\r\n        const row2 = position2[0];\r\n        const column2 = position2[1];\r\n        // Checks to see if missShot is true\r\n        if(mainBoard.missedShot(position2) ){\r\n            document.querySelector(`[data-row=\"${row2}\"][data-column=\"${column2}\"].player-tile`)\r\n            .classList.add('miss');\r\n        } else {\r\n            document.querySelector(`[data-row=\"${row2}\"][data-column=\"${column2}\"].player-tile`)\r\n            .classList.add('hit');\r\n        };\r\n        \r\n        // if opponents ships are all sunk remove contentUI, display winnerUI, playAgain! else opponent wins\r\n        if(opponentBoard.checkAllShipsSunk() === true) {\r\n            removeContentUI();\r\n            winnerUI(mainPlayer.name);\r\n            playAgain(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls);\r\n   \r\n        } else if (mainBoard.checkAllShipsSunk() === true) {\r\n            removeContentUI();\r\n            winnerUI(opponent.name);\r\n            playAgain(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls);\r\n        }\r\n        \r\n};\r\n\r\n\r\nconst gameTurn = (mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls) => {\r\n    const tiles = document.querySelectorAll('.opponent-tile');\r\n    tiles.forEach(tile => {\r\n        tile.addEventListener('click', function(event) {\r\n            gameTurnHandler(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls, event);\r\n        }, {once: true});\r\n    })\r\n\r\n}\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/UI/gameboardUI.js\nconst gameboardUI_gameBoardUI = (game, showShip) => {\r\n    const content = document.querySelector('.content');\r\n    const tiles = game.board;\r\n\r\n    const boardUI = document.createElement('div');\r\n    boardUI.classList.add('board-ui');\r\n\r\n    for(let i = 0; i < tiles.length; i++) {\r\n        for(let j = 0; j < tiles.length; j++) {\r\n            if(typeof tiles[i][j] === 'object' && showShip) {\r\n                boardUI.append(gameboardUI_createTileDiv(i, j, true))\r\n            } else if (showShip) {\r\n                boardUI.append(gameboardUI_createTileDiv(i, j, false))\r\n            } else {\r\n                boardUI.append(gameboardUI_createTileDiv(i, j, false, true))\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return content.append(boardUI);\r\n};\r\n\r\n// creates a div for each arrays\r\nconst gameboardUI_createTileDiv = (row, column, ship, opponent) => {\r\n    const tile = document.createElement('div');\r\n    tile.dataset.row = row;\r\n    tile.dataset.column = column;\r\n    if(opponent) {\r\n        tile.classList.add('opponent-tile');\r\n    } else {\r\n        tile.classList.add('player-tile');\r\n    }\r\n    // if ship is passed true add class list of has ship\r\n    if(ship) {\r\n        tile.classList.add('has-ship');\r\n    }\r\n\r\n    return tile;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/game/startGame.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst startGameHandler = (mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls) => {\r\n    removePlaceShipUI();\r\n    opponent.placeShipsRandomly(opponentBoard);\r\n    contentUI();\r\n    gameboardUI_gameBoardUI(opponentBoard);\r\n    gameboardUI_gameBoardUI(mainBoard, true);\r\n    gameTurn(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls);\r\n};\r\n\r\n\r\n\r\nconst startGame = (mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls) => {\r\n    const btn = document.querySelector('.start-game');\r\n    btn.addEventListener('click', function() {\r\n        startGameHandler(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls);\r\n    })\r\n};\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncreateHeaderUI('Battleship Lite');\r\n\r\nconst mainBoard = new Gameboard;\r\nconst opponentBoard = new Gameboard;\r\n\r\n\r\nconst mainPlayer = new Player('You');\r\nconst opponent = new Player('opponent');\r\nconst mainShips = createAllShips();\r\n\r\nconst controls = new Controller;\r\n\r\n\r\nplaceShipsPage(opponentBoard, mainBoard, mainShips, controls);\r\nstartGame(mainBoard, opponentBoard, mainPlayer, opponent, mainShips, controls);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://battleship-theodinproject/./src/index.js_+_15_modules?")}},__webpack_module_cache__={};function __webpack_require__(n){var r=__webpack_module_cache__[n];if(void 0!==r)return r.exports;var e=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n](e,e.exports,__webpack_require__),e.exports}__webpack_require__.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(r,{a:r}),r},__webpack_require__.d=(n,r)=>{for(var e in r)__webpack_require__.o(r,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},__webpack_require__.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(522)})();